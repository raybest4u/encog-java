/*
 * Conversation.java
 *
 * Created on February 15, 2004, 9:07 PM
 */

package org.encog.workbench.frames;

import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextPane;

import org.encog.nlp.Context;
import org.encog.nlp.memory.RomMemory;

/**
 * 
 * @author jheaton
 */
public class Conversation extends JFrame implements ActionListener {

	public static final String COLOR_BLUE = "#0000ff";
	public static final String COLOR_RED = "#ff0000";
	public String yourName;
	public String otherName;
	private StringBuilder listing = new StringBuilder();
	private Context context;

	private JTextPane fromBoth;
	private JTextPane fromYou;
	private JButton sendButton;

	/** Creates new form Conversation */
	public Conversation(String title, String yourName, String otherName) {
		this.yourName = yourName;
		this.otherName = otherName;
		setTitle(title);
		initComponents();
		context = new Context();
		try {
			context.init();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		RomMemory.load(context.getMemory());
		fromBoth.setContentType("text/html");
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	private void initComponents() {
		JScrollPane jScrollPane1 = new javax.swing.JScrollPane();
		fromBoth = new javax.swing.JTextPane();
		JScrollPane jScrollPane2 = new javax.swing.JScrollPane();
		fromYou = new javax.swing.JTextPane();

		getContentPane().setLayout(new BorderLayout());

		addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent evt) {
				exitForm(evt);
			}
		});

		fromBoth.setEditable(false);
		jScrollPane1.setViewportView(fromBoth);

		getContentPane().add(jScrollPane1, BorderLayout.CENTER);

		fromYou.addKeyListener(new java.awt.event.KeyAdapter() {
			public void keyReleased(java.awt.event.KeyEvent evt) {
				fromYouKeyReleased(evt);
			}
		});

		jScrollPane2.setViewportView(fromYou);

		JPanel fromYouPanel = new JPanel();
		fromYouPanel.setLayout(new BorderLayout());
		fromYouPanel.add(jScrollPane2, BorderLayout.CENTER);
		fromYouPanel.add(this.sendButton = new JButton("Send"),
				BorderLayout.EAST);
		getContentPane().add(fromYouPanel, BorderLayout.SOUTH);
		this.sendButton.addActionListener(this);

		java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit()
				.getScreenSize();
		setBounds((screenSize.width - 400) / 2, (screenSize.height - 300) / 2,
				400, 300);
	}

	private void fromYouKeyReleased(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_fromYouKeyReleased
		if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
			sendToEncog();
		}

	}

	private void sendToEncog() {
		String message = fromYou.getText().trim();
		if (message.length() > 0) {
			addMessage(COLOR_RED, this.yourName, message);
			String response = context.getEvaluate().parse(message);
			addMessage(COLOR_BLUE, this.otherName, response);
			fromYou.setText("");
		}
	}

	private void exitForm(java.awt.event.WindowEvent evt) {
		dispose();
	}

	public void addMessage(String color, String from, String message) {
		int start = message.toLowerCase().indexOf("<body");
		if (start != -1) {
			start = message.indexOf('>', start);
			if (start != -1)
				start++;
		}

		if (start != -1)
			message = message.substring(start);
		int end = message.toLowerCase().indexOf("</body>");
		if (end != -1)
			message = message.substring(0, end);

		listing.append("<b><font color = \"" + color + "\">" + from
				+ ":</font></b><font color=\"black\">" + message
				+ "</font><br>");
		fromBoth.setText("<html><body>" + listing + "</body></html>");
		fromBoth.setSelectionStart(listing.length());
		fromBoth.setSelectionEnd(listing.length());
	}

	public void send(String from, String message) {
		addMessage(COLOR_BLUE, from, message);
	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == this.sendButton) {
			sendToEncog();
		}

	}
}
